/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: p.proto */

#ifndef PROTOBUF_C_p_2eproto__INCLUDED
#define PROTOBUF_C_p_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Xlreg__XLRegMsg Xlreg__XLRegMsg;
typedef struct _Xlreg__XLRegMsg__Token Xlreg__XLRegMsg__Token;


/* --- enums --- */

typedef enum _Xlreg__XLRegMsg__Tag {
  XLREG__XLREG_MSG__TAG__RegCredRequest = 1,
  XLREG__XLREG_MSG__TAG__RegCredReply = 2,
  XLREG__XLREG_MSG__TAG__Client = 3,
  XLREG__XLREG_MSG__TAG__ClientOK = 4,
  XLREG__XLREG_MSG__TAG__Create = 5,
  XLREG__XLREG_MSG__TAG__CreateReply = 6,
  XLREG__XLREG_MSG__TAG__Join = 7,
  XLREG__XLREG_MSG__TAG__JoinReply = 8,
  XLREG__XLREG_MSG__TAG__GetCluster = 9,
  XLREG__XLREG_MSG__TAG__ClusterMembers = 10,
  XLREG__XLREG_MSG__TAG__Bye = 11,
  XLREG__XLREG_MSG__TAG__Ack = 12,
  XLREG__XLREG_MSG__TAG__Error = 13
    _PROTOBUF_C_FORCE_ENUM_TO_BE_INT_SIZE(XLREG__XLREG_MSG__TAG)
} Xlreg__XLRegMsg__Tag;

/* --- messages --- */

struct  _Xlreg__XLRegMsg__Token
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_attrs;
  uint64_t attrs;
  protobuf_c_boolean has_id;
  ProtobufCBinaryData id;
  protobuf_c_boolean has_commskey;
  ProtobufCBinaryData commskey;
  protobuf_c_boolean has_sigkey;
  ProtobufCBinaryData sigkey;
  size_t n_myends;
  char **myends;
  protobuf_c_boolean has_digsig;
  ProtobufCBinaryData digsig;
};
#define XLREG__XLREG_MSG__TOKEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xlreg__xlreg_msg__token__descriptor) \
    , NULL, 0,0, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL}, 0,NULL, 0,{0,NULL} }


struct  _Xlreg__XLRegMsg
{
  ProtobufCMessage base;
  protobuf_c_boolean has_op;
  Xlreg__XLRegMsg__Tag op;
  protobuf_c_boolean has_aesiv;
  ProtobufCBinaryData aesiv;
  protobuf_c_boolean has_aeskey;
  ProtobufCBinaryData aeskey;
  protobuf_c_boolean has_salt1;
  ProtobufCBinaryData salt1;
  protobuf_c_boolean has_salt2;
  ProtobufCBinaryData salt2;
  protobuf_c_boolean has_version;
  uint32_t version;
  char *clientname;
  protobuf_c_boolean has_clientid;
  ProtobufCBinaryData clientid;
  protobuf_c_boolean has_clientattrs;
  uint64_t clientattrs;
  Xlreg__XLRegMsg__Token *clientspecs;
  protobuf_c_boolean has_clusterid;
  ProtobufCBinaryData clusterid;
  char *clustername;
  protobuf_c_boolean has_clustersize;
  uint32_t clustersize;
  protobuf_c_boolean has_clusterattrs;
  uint64_t clusterattrs;
  protobuf_c_boolean has_endpointcount;
  uint32_t endpointcount;
  protobuf_c_boolean has_which;
  uint64_t which;
  size_t n_tokens;
  Xlreg__XLRegMsg__Token **tokens;
  protobuf_c_boolean has_digsig;
  ProtobufCBinaryData digsig;
  char *errdesc;
};
#define XLREG__XLREG_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xlreg__xlreg_msg__descriptor) \
    , 0,0, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL}, 0,0, NULL, 0,{0,NULL}, 0,0, NULL, 0,{0,NULL}, NULL, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,{0,NULL}, NULL }


/* Xlreg__XLRegMsg__Token methods */
void   xlreg__xlreg_msg__token__init
                     (Xlreg__XLRegMsg__Token         *message);
/* Xlreg__XLRegMsg methods */
void   xlreg__xlreg_msg__init
                     (Xlreg__XLRegMsg         *message);
size_t xlreg__xlreg_msg__get_packed_size
                     (const Xlreg__XLRegMsg   *message);
size_t xlreg__xlreg_msg__pack
                     (const Xlreg__XLRegMsg   *message,
                      uint8_t             *out);
size_t xlreg__xlreg_msg__pack_to_buffer
                     (const Xlreg__XLRegMsg   *message,
                      ProtobufCBuffer     *buffer);
Xlreg__XLRegMsg *
       xlreg__xlreg_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xlreg__xlreg_msg__free_unpacked
                     (Xlreg__XLRegMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Xlreg__XLRegMsg__Token_Closure)
                 (const Xlreg__XLRegMsg__Token *message,
                  void *closure_data);
typedef void (*Xlreg__XLRegMsg_Closure)
                 (const Xlreg__XLRegMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor xlreg__xlreg_msg__descriptor;
extern const ProtobufCMessageDescriptor xlreg__xlreg_msg__token__descriptor;
extern const ProtobufCEnumDescriptor    xlreg__xlreg_msg__tag__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_p_2eproto__INCLUDED */
